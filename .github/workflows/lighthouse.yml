name: Lighthouse CI

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      url:
        description: 'URL to run Lighthouse on'
        required: false
        default: 'http://localhost:8080'

permissions:
  contents: read
  issues: write

jobs:
  lhci:
    name: Lighthouse
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install dependencies
        run: |
          npm install -g @lhci/cli@0.12.x
          npm install -g http-server
      - name: Start local server
        run: http-server . -p 8080 &
      - name: Run Lighthouse CI
        run: |
          URL="${{ github.event.inputs.url || 'http://localhost:8080' }}"
          lhci autorun --collect.url=$URL --upload.target=filesystem --upload.outputDir=./lhci_reports
      - name: Format and Log Lighthouse score
        id: lhci
        run: |
          RESULT="Lighthouse 성능 측정 결과"
          if [ -f ./lhci_reports/manifest.json ]; then
            LATEST_JSON=$(ls -t ./lhci_reports/localhost-*.report.json | head -n1)
            if [ -n "$LATEST_JSON" ]; then
              while IFS=: read -r key score; do
                score=$(echo "$score" | tr -d ' ')
                if (( $(echo "$score >= 90" | bc -l) )); then
                  emoji="🟢"
                elif (( $(echo "$score >= 50" | bc -l) )); then
                  emoji="🟠"
                else
                  emoji="🔴"
                fi
                RESULT+=$'\n'"$key: $emoji $score"
              done < <(jq -r '.categories | to_entries[] | "\(.key): \(.value.score * 100 | floor)"' "$LATEST_JSON")
              
              RESULT+=$'\n\n'"상세 보고서는 Artifacts에서 확인할 수 있습니다."
            else
              RESULT+=$'\n'"No JSON report file found in lhci_reports directory"
            fi
          else
            RESULT+=$'\n'"manifest.json not found. Unable to process Lighthouse results."
          fi

          echo "result<<EOF" >> $GITHUB_OUTPUT
          echo "$RESULT" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Upload lighthouse results
        uses: actions/upload-artifact@v4
        with:
          name: lighthouse-reports
          path: ./lhci_reports

      - name: Get latest commit message
        id: get-commit-message
        run: |
          COMMIT_MESSAGE=$(git log -1 --pretty=format:%s)
          COMMIT_MESSAGE="${COMMIT_MESSAGE//'%'/'%25'}"
          COMMIT_MESSAGE="${COMMIT_MESSAGE//$'\n'/'%0A'}"
          RESULT="${COMMIT_MESSAGE//$'\r'/'%0D'}"
          echo "message=$COMMIT_MESSAGE" >> $GITHUB_OUTPUT

      - name: Comment Result on Issue
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const issueNumber = 1;
            const commitMessage = `${{ steps.get-commit-message.outputs.message }}`;
            const lightHouseResult = `${{ steps.lhci.outputs.result }}`;

            const commentBody = `## Lighthouse CI 결과\n\n${commitMessage}\n\n${lightHouseResult}`;

            const [owner, repo] = process.env.GITHUB_REPOSITORY.split('/');

            await github.rest.issues.createComment({
              owner,
              repo,
              issue_number: issueNumber,
              body: commentBody
            });
